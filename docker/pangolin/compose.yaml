services:
  pangolin:
    image: "fosrl/pangolin:1.9.2"
    container_name: "pangolin"
    restart: "unless-stopped"
    security_opt:
      - "no-new-privileges:true"
    volumes:
      - "${DOCKER_DATA_DIR:?error}/${COMPOSE_PROJECT_NAME:?error}/:/app/config:z"
    configs:
        - source: "pangolin_config"
          target: "/app/config/config.yml"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/"]
      interval: "3s"
      timeout: "3s"
      retries: 15
    networks:
      proxy:
    labels:
      traefik.enable: true
      # Frontend (Next.js)
      traefik.http.routers.pangolin-next.entrypoints: "websecure-internal,websecure-external"
      traefik.http.routers.pangolin-next.rule: "Host(`pangolin.${TRAEFIK_DOMAINNAME_1:?error}`) && !PathPrefix(`/api/v1`)"
      traefik.http.routers.pangolin-next.service: "pangolin-next"
      traefik.http.services.pangolin-next.loadbalancer.server.port: 3002
      # API
      traefik.http.routers.pangolin-api.entrypoints: "websecure-internal,websecure-external"
      traefik.http.routers.pangolin-api.rule: "Host(`pangolin.${TRAEFIK_DOMAINNAME_1:?error}`) && PathPrefix(`/api/v1`)"
      traefik.http.routers.pangolin-api.service: "pangolin-api"
      traefik.http.services.pangolin-api.loadbalancer.server.port: 3000
      # WebSocket
      traefik.http.routers.pangolin-ws.entrypoints: "websecure-internal,websecure-external"
      traefik.http.routers.pangolin-ws.rule: "Host(`pangolin.${TRAEFIK_DOMAINNAME_1:?error}`)"
      traefik.http.routers.pangolin-ws.service: "pangolin-api" # Reuse the API service for WebSocket
      # Badger
      traefik.http.middlewares.badger.plugin.badger.apiBaseUrl: "http://pangolin:3001/api/v1"
      traefik.http.middlewares.badger.plugin.badger.userSessionCookieName: "p_session_token"
      traefik.http.middlewares.badger.plugin.badger.accessTokenQueryParam: "p_token"
      traefik.http.middlewares.badger.plugin.badger.resourceSessionRequestParam: "p_session_request"

networks:
  proxy:
    external: true
    name: "${TRAEFIK_NETWORK_NAME:-proxy}"

configs:
  pangolin_config:
    content: |
      # To see all available options, please visit the docs:
      # https://docs.fossorial.io/Pangolin/Configuration/config

      app:
        dashboard_url: "https://pangolin.${TRAEFIK_DOMAINNAME_1:?error}"
        log_level: "info"
        save_logs: true
        log_failed_attempts: true

      domains:
        domain1:
          base_domain: "${TRAEFIK_DOMAINNAME_1:?error}"
          cert_resolver: "letsencrypt"
          prefer_wildcart_cert: true

      server:
        secret: "${SERVER_SECRET:?error}"
        internal_hostname: "pangolin"
        session_cookie_name: "p_session_token"
        resource_access_token_param: "p_token"
        resource_session_request_param: "p_session_request"
        cors:
          origins: ["https://pangolin.${TRAEFIK_DOMAINNAME_1:?error}"]
          methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
          allowed_headers: ["X-CSRF-Token", "Content-Type"]
          credentials: true

      gerbil:
        start_port: 51820
        base_endpoint: "pangolin.${TRAEFIK_DOMAINNAME_1:?error}"

      email:
        smtp_host: "${SMTP_HOST:?error}"
        smtp_port: 587
        smtp_user: "${SMTP_USER:?error}"
        smtp_pass: "${SMTP_PASSWORD:?error}"
        no_reply: "${SMTP_NO_REPLY_EMAIL:?error}"

      flags:
        require_email_verification: true
        disable_signup_without_invite: true
        disable_user_create_org: true
        allow_raw_resources: true