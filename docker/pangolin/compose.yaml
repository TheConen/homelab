services:
  pangolin:
    image: "fosrl/pangolin:1.8.0"
    container_name: "pangolin"
    restart: "unless-stopped"
    volumes:
      - "${DOCKER_DATA_DIR:?error}/${COMPOSE_PROJECT_NAME:?error}/:/app/config:z"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/"]
      interval: "3s"
      timeout: "3s"
      retries: 15

  gerbil:
    image: "fosrl/gerbil:1.0.0"
    container_name: "gerbil"
    restart: "unless-stopped"
    depends_on:
      pangolin:
        condition: "service_healthy"
    command:
      - "--reachableAt=http://gerbil:3003"
      - "--generateAndSaveKeyTo=/var/config/key"
      - "--remoteConfig=http://pangolin:3001/api/v1/gerbil/get-config"
      - "--reportBandwidthTo=http://pangolin:3001/api/v1/gerbil/receive-bandwidth"
    volumes:
      - "${DOCKER_DATA_DIR:?error}/${COMPOSE_PROJECT_NAME:?error}/:/var/config:z"
    cap_add:
      - "NET_ADMIN"
      - "SYS_MODULE"
    ports:
      - "51820:51820/udp"
      - "443:443" # Port for traefik because of the network_mode
      - "80:80" # Port for traefik because of the network_mode

  traefik:
    image: "traefik:v3.5.0"
    container_name: "traefik"
    restart: "unless-stopped"
    security_opt:
      - "label:disable"
    network_mode: "service:gerbil" # Ports appear on the gerbil service
    depends_on:
      pangolin:
        condition: "service_healthy"
    command:
      - "--configFile=/etc/traefik/traefik_config.yml"
    environment:
      HETZNER_API_KEY: "${HETZNER_API_KEY:?error}" # Environment variable for Hetzner API key
    volumes:
      - "${DOCKER_DATA_DIR:?error}/${COMPOSE_PROJECT_NAME:?error}/traefik:/etc/traefik:ro,z" # Volume to store the Traefik configuration
      - "${DOCKER_DATA_DIR:?error}/${COMPOSE_PROJECT_NAME:?error}/letsencrypt:/letsencrypt:z" # Volume to store the Let's Encrypt certificates
      - "/var/run/docker.sock:/var/run/docker.sock"
networks:
  default:
    driver: "bridge"
    name: "pangolin"